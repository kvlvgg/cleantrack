@namespace Views.Home

@using CleanTrack.Localization;

<Controls.Card Padding="@UI.Controls.Card.Padding.LG" Outline>
	<div class="noItemFound">
		<Controls.Text Value="@Resources.NoItemFoundLine1" Size="@UI.Controls.Text.Size.SM" />
		<Controls.Text Value="@Resources.NoItemFoundLine2" Size="@UI.Controls.Text.Size.SM" />

		@if (!IsEditMode)
		{
			<div class="btnEditMode">
				<Controls.Button Icon="@UI.Controls.Icon.Text.EDIT"
								 Text="@Resources.BtnTextEditMode"
								 Variant="@UI.Controls.Button.Variant.SECONDARY"
								 Size="@UI.Controls.Button.Size.MD"
								 OnClick="() => IsEditModeChanged.InvokeAsync(!IsEditMode)" />
			</div>
		}
		else
		{
			<div class="glossary">
				<div class="glossaryItem">
					<Controls.Tag Text="@Resources.ShortcutSection" />
					<Controls.Text Value="-" Size="@UI.Controls.Text.Size.SM" />
					<Controls.Text Value="@Resources.LblSection" Size="@UI.Controls.Text.Size.SM" />
				</div>

				<div class="glossaryItem">
					<Controls.Tag Text="@Resources.ShortcutTimer" />
					<Controls.Text Value="-" Size="@UI.Controls.Text.Size.SM" />
					<Controls.Text Value="@Resources.LblTimer" Size="@UI.Controls.Text.Size.SM" />
				</div>
			</div>
		}
	</div>
</Controls.Card>

@code {
	[Parameter]
	public bool IsEditMode { get; set; }

	[Parameter]
	public EventCallback<bool> IsEditModeChanged { get; set; }
}
